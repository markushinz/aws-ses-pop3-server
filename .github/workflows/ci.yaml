name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: pre-commit
        uses: markushinz/actions/pre-commit@v1.1.9
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Test and Build
        run: |
          go mod download
          go mod tidy
          git diff --exit-code

          go install github.com/ory/go-acc@latest
          go-acc ./... -o cover.out -- -race

          CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -o aws-ses-pop3-server-x86_64-Linux
          CGO_ENABLED=0 GOARCH=amd64 GOOS=darwin go build -o aws-ses-pop3-server-x86_64-Darwin
          CGO_ENABLED=0 GOARCH=arm64 GOOS=darwin go build -o aws-ses-pop3-server-arm64-Darwin
      - name: SonarCloud Scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Docker - Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker - Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Version
        uses: markushinz/actions/version@v1.1.9
        with:
          minimum_version_command: cat version.txt
      - name: Docker - Build and Push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:v${{ env.VERSION }}
          cache-from: type=registry,ref=${{ github.repository }}:buildcache
          cache-to: type=registry,ref=${{ github.repository }}:buildcache,mode=max
      - name: Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" gh release create "v${VERSION}" --generate-notes ./aws-ses-pop3-server-x86_64-Linux ./aws-ses-pop3-server-x86_64-Darwin ./aws-ses-pop3-server-arm64-Darwin
      - name: Deploy
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: GITHUB_TOKEN="${{ secrets.TU_TOKEN }}" gh workflow run -R "${{ secrets.DEPLOY_REPO }}" cd -f "repository=${{ github.repository }}" -f "tag=v${VERSION}" -f "merge=true"
